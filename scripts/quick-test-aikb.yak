// =============================================================================
// AIKB 快速测试脚本
// =============================================================================
// 快速验证 merge-in-one-text.yak 和基础功能
// 关键词: 快速测试, AIKB验证, ZIP生成, 基础检查
// =============================================================================

println("=" * 60)
println("AIKB 快速测试")
println("=" * 60)

// 检查当前目录
currentDir = os.Getwd()~
println(sprintf("当前目录: %v", currentDir))

// 检查必要文件
mergeScript = "scripts/merge-in-one-text.yak"
if !file.IsExisted(mergeScript) {
    die(sprintf("错误：找不到 %v", mergeScript))
}
println(sprintf("✓ %v 存在", mergeScript))

// 检查目标文件夹
folders = ["awesome-scripts", "basic-syntax", "library-usage", "practice"]
for folder in folders {
    if file.IsDir(folder) {
        println(sprintf("✓ %v/ 存在", folder))
    } else {
        yakit.Warn(sprintf("警告：%v/ 不存在", folder))
    }
}

// 生成测试 ZIP
println("\n生成测试 ZIP...")
testZip = "test-aikb-quick.zip"

// 删除旧文件
if file.IsExisted(testZip) {
    os.RemoveAll(testZip)
}

// 运行生成脚本
result, err = exec.System(sprintf("yak %v --output %v 2>&1", mergeScript, testZip))
if err != nil {
    yakit.Error(sprintf("生成失败: %v", err))
    yakit.Error(sprintf("输出: %v", string(result)))
    die("ZIP 生成失败")
}

// 检查结果
if !file.IsExisted(testZip) {
    die("ZIP 文件未生成")
}

zipSize = len(file.ReadFile(testZip)~)
println(sprintf("✓ ZIP 生成成功: %.2f MB", float(zipSize)/1024/1024))

// 验证 ZIP 内容
listResult, _ = exec.System(sprintf("unzip -l %v 2>&1 | tail -1", testZip))
println(sprintf("ZIP 统计: %v", str.TrimSpace(string(listResult))))

// 创建测试时间戳文件
println("\n创建测试时间戳文件...")
timestampFile = "test-aikb-timestamp.txt"
timestampContent = sprintf(`Upload Time: %v
Test Run: Local Quick Test
ZIP Size: %v bytes
Generated By: quick-test-aikb.yak
`, time.Now().Format("2006-01-02 15:04:05 MST"), zipSize)

file.Save(timestampFile, timestampContent)~
println("✓ 时间戳文件创建成功")
println(sprintf("内容:\n%v", timestampContent))

// 清理
println("\n清理测试文件...")
os.RemoveAll(testZip)
os.RemoveAll(timestampFile)
println("✓ 清理完成")

println("\n" + "=" * 60)
yakit.Success("快速测试通过！")
println("可以安全推送到 GitHub 触发 Actions")
println("=" * 60)
